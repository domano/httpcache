// Automatically generated by MockGen. DO NOT EDIT!
// Source: httpcache (interfaces: Cacheable)

package mock_httpcache

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Cacheable interface
type MockCacheable struct {
	ctrl     *gomock.Controller
	recorder *_MockCacheableRecorder
}

// Recorder for MockCacheable (not exported)
type _MockCacheableRecorder struct {
	mock *MockCacheable
}

func NewMockCacheable(ctrl *gomock.Controller) *MockCacheable {
	mock := &MockCacheable{ctrl: ctrl}
	mock.recorder = &_MockCacheableRecorder{mock}
	return mock
}

func (_m *MockCacheable) EXPECT() *_MockCacheableRecorder {
	return _m.recorder
}

func (_m *MockCacheable) Key() string {
	ret := _m.ctrl.Call(_m, "Key")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockCacheableRecorder) Key() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Key")
}

func (_m *MockCacheable) Size() int {
	ret := _m.ctrl.Call(_m, "Size")
	ret0, _ := ret[0].(int)
	return ret0
}

func (_mr *_MockCacheableRecorder) Size() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Size")
}
